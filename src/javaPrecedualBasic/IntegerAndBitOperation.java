package javaPrecedualBasic;

/**
 * 整型运算 & 位运算
 */
public class IntegerAndBitOperation {

    //移位运算
    //向左移位，右边补0
    int n = 7;       // 00000000 00000000 00000000 00000111 = 7
    int a = n << 1;  // 00000000 00000000 00000000 00001110 = 14
    int b = n << 2;  // 00000000 00000000 00000000 00011100 = 28
    int c = n << 28; // 01110000 00000000 00000000 00000000 = 1879048192
    int d = n << 29; // 11100000 00000000 00000000 00000000 = -536870912

    //向右移位，左边补0；如果对负数右移，最高位1不动，结果仍是负数
    int n1 = 7;       // 00000000 00000000 00000000 00000111 = 7
    int a1 = n >> 1;  // 00000000 00000000 00000000 00000011 = 3
    int b1 = n >> 2;  // 00000000 00000000 00000000 00000001 = 1
    int c1 = n >> 3;  // 00000000 00000000 00000000 00000000 = 0

    //无符号右移，特点是符号位跟着动，因此符号右移会变正数
    int n2 = -536870912;
    int a2 = n >>> 1;  // 01110000 00000000 00000000 00000000 = 1879048192
    int b2 = n >>> 2;  // 00111000 00000000 00000000 00000000 = 939524096
    int c2 = n >>> 29; // 00000000 00000000 00000000 00000111 = 7
    int d2 = n >>> 31; // 00000000 00000000 00000000 00000001 = 1
}
